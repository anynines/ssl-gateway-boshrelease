<% enable_proxy_protocol = p('a9s_ssl_gateway.enable_proxy_protocol') %>
<% p('a9s_ssl_gateway.domain_blacklist').each do |blacklisted_domain| %>
  <% ssl_enabled = (blacklisted_domain.key?("certificate") && blacklisted_domain.key?("ca") && blacklisted_domain.key?("private_key")) %>
server {
  <% if enable_proxy_protocol %>
  listen 80 proxy_protocol;
    <% if ssl_enabled %>
  listen 443 ssl proxy_protocol;
  listen 4443 ssl proxy_protocol;
    <% end %>
  <% else %>
  listen 80;
    <% if ssl_enabled %>
  listen 443 ssl;
  listen 4443 ssl;
    <% end %>
  <% end %>

  server_name  *.<%= blacklisted_domain['domain'] %> <%= blacklisted_domain['domain'] %>;

  access_log  /var/vcap/sys/log/nginx/<%= blacklisted_domain['domain'] %>.access.log  main;
  error_log   /var/vcap/sys/log/nginx/<%= blacklisted_domain['domain'] %>.error.log;

  include /var/vcap/store/nginx/default-vserver.conf;

  <% if ssl_enabled %>
  include /var/vcap/store/nginx/default-ssl.conf;
  ssl_certificate      /var/vcap/store/nginx/ssl/wild.<%= blacklisted_domain['domain'] %>.crt.bundle;
  ssl_certificate_key  /var/vcap/store/nginx/ssl/wild.<%= blacklisted_domain['domain'] %>.key;
  <% end %>

  location / {
    <% if blacklisted_domain.key?("allow") %>
     <% blacklisted_domain['allow'].each do |allowed_ip| %>
    allow <%= allowed_ip %>;
      <% end %>
    <% end %>
    deny all;
    include /var/vcap/store/nginx/default-location-header.conf;
  }
}
<% end %>
