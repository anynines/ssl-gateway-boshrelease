#!/bin/bash -e

PIDFILE=/var/vcap/sys/run/nginx/nginx.pid

# remove old config and certs
rm -rf /var/vcap/store/nginx/conf.d
rm -rf /var/vcap/store/nginx/static
rm -rf /var/vcap/store/nginx/partials
rm -f /var/vcap/store/nginx/*.conf

# create folder structure
mkdir -p /var/vcap/sys/run/nginx
mkdir -p /var/vcap/sys/log/nginx
mkdir -p /var/vcap/jobs/nginx/etc

# nginx standard folders
mkdir -p /var/vcap/store/nginx/conf.d
mkdir -p /var/vcap/store/nginx/sites-enabled
mkdir -p /var/vcap/store/nginx/sites-available

# partial config - place config parts e.g. for locations, ssl 
# config here
mkdir -p /var/vcap/store/nginx/partials

# certs, key, ca's 
mkdir -p /var/vcap/store/nginx/ssl

# deprecated
mkdir -p /var/vcap/store/nginx/static

# root config
cp /var/vcap/jobs/nginx/etc/nginx.conf /var/vcap/store/nginx/
cp /var/vcap/jobs/nginx/etc/ssh-proxy.conf /var/vcap/store/nginx/
cp /var/vcap/jobs/nginx/etc/tcp-redirect.conf /var/vcap/store/nginx

# partials - contains partial config e.g. locations, ssl config...
cp /var/vcap/jobs/nginx/etc/maps.conf /var/vcap/store/nginx/partials/
cp /var/vcap/jobs/nginx/etc/default-ssl.conf /var/vcap/store/nginx/partials/
cp /var/vcap/jobs/nginx/etc/default-location-header.conf /var/vcap/store/nginx/partials/
cp /var/vcap/jobs/nginx/etc/default-vserver-locations.conf /var/vcap/store/nginx/partials/

# vserver
cp /var/vcap/jobs/nginx/etc/vserver.conf /var/vcap/store/nginx/conf.d/
cp /var/vcap/jobs/nginx/etc/upstream.conf /var/vcap/store/nginx/conf.d/

# deprecated config, will be removed when vhost api gets updated 
cp /var/vcap/jobs/nginx/etc/shared.conf /var/vcap/store/nginx/static/shared_host.conf
cp /var/vcap/jobs/nginx/etc/shared_host_wss.conf /var/vcap/store/nginx/static/

# add https-redirect vserver config to conf.d folder if https-redirect flag is enabled.
# The https-redirect.conf matches all requests on port 80 and reuturns 301 moved permanently
# to the https route.
<% if p('a9s_ssl_gateway.enable_https_redirect') %>
cp /var/vcap/jobs/nginx/etc/https-redirect.conf /var/vcap/store/nginx/conf.d
<% end %>

# iterate over the vserver block in the deployment manifest and create vservers for  each.
#
# A vserver block in the deployment manifest can have the following properties:
# __domain__: name of the domain, in the vserver config the domain and *.domain (subdomain) will be 
# matched.
# * SSL is optional leave the ca, certificate and private key and the vserver will automatically listen
# to port 80 only (doesn't make sense if https-redirect is enabled).
# __ca__: ca cert (SSL)
# __certificate__: cert (SSL)
# __private_key__: private key (SSL)
# __deny_all__: if set to true location ~ will be set to deny_all (default value is false)
# __allow__: here you can list all IP's / IP - ranges that shall be allowed, you can combine this with
# deny_all to create a whitelist (default value is []).
# __default_server__: if set to true, ports 80, 443 and 4443 (if ssl enabled) will have the default_server
# label (default value is false).
<% p('a9s_ssl_gateway.vserver').each do |vserver| %>
  <% if (vserver.key?("certificate") && vserver.key?("ca") && vserver.key?("private_key")) %>
# handle cert bundle creation if certs are specified, otherwise do not activate ssl
>/var/vcap/store/nginx/ssl/wild.<%= vserver["domain"] %>.crt.bundle
echo "<%= vserver["certificate"] %>" >> /var/vcap/store/nginx/ssl/wild.<%= vserver["domain"] %>.crt.bundle
echo "<%= vserver["ca"] %>" >> /var/vcap/store/nginx/ssl/wild.<%= vserver["domain"] %>.crt.bundle

>/var/vcap/store/nginx/ssl/wild.<%= vserver["domain"] %>.key
echo "<%= vserver["private_key"] %>" >> /var/vcap/store/nginx/ssl/wild.<%= vserver["domain"] %>.key
  <% end %>
<% end %>

cp /var/vcap/jobs/nginx/etc/vserver.conf /var/vcap/store/nginx/conf.d/vserver.conf

case $1 in

  start)

    /var/vcap/packages/nginx/sbin/nginx -g "pid $PIDFILE;" -c /var/vcap/store/nginx/nginx.conf
    ;;
  stop)
    kill $(cat $PIDFILE)
    ;;
  *)
    echo "Usage: ctl {start|stop}"
    ;;
esac
